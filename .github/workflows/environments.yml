name: Environment

on: workflow_dispatch

jobs:
  production:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    environment:
      name: production
      url: "${{ vars.ENVIRONMENT_URL }}"
    steps:
      - name: Print var
        env:
          DEPLOY_ENV: ${{ vars.DEPLOY_ENV }}
          RENAMED_DEPLOY_ENV: ${{ vars.DEPLOY_ENV }}
        run: |
          echo "${{ vars.DEPLOY_ENV }}"
          echo $DEPLOY_ENV
          echo $ENVIRONMENT_URL
          echo $TEST_REPOSITORY_VARIABLE
          echo $RENAMED_DEPLOY_ENV

  development:
    runs-on: ubuntu-latest
    if: github.ref_name == 'develop'
    environment:
      name: development
      url: "${{ vars.ENVIRONMENT_URL }}"
    steps:
      - name: Print var
        env:
          DEPLOY_ENV: ${{ vars.DEPLOY_ENV }}
          RENAMED_DEPLOY_ENV: ${{ vars.DEPLOY_ENV }}
        run: |
          echo "${{ vars.DEPLOY_ENV }}"
          echo $DEPLOY_ENV
          echo $ENVIRONMENT_URL
          echo $TEST_REPOSITORY_VARIABLE
          echo $RENAMED_DEPLOY_ENV

  post-job:
    runs-on: ubuntu-latest
    if: always() && contains(needs.*.result, 'success')
    needs:
      - production
      - development
    steps:
      - name: Print var
        env:
          DEPLOY_ENV: ${{ vars.DEPLOY_ENV }}
          RENAMED_DEPLOY_ENV: ${{ vars.DEPLOY_ENV }}
        run: |
          echo "${{ vars.DEPLOY_ENV }}"
          echo $DEPLOY_ENV
          echo $ENVIRONMENT_URL
          echo $TEST_REPOSITORY_VARIABLE
          echo $RENAMED_DEPLOY_ENV

  empty-url:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    environment:
      name: production
      url: ""
    steps:
      - name: Print var
        env:
          DEPLOY_ENV: ${{ vars.DEPLOY_ENV }}
          RENAMED_DEPLOY_ENV: ${{ vars.DEPLOY_ENV }}
        run: |
          echo "${{ vars.DEPLOY_ENV }}"
          echo $DEPLOY_ENV
          echo $ENVIRONMENT_URL
          echo $TEST_REPOSITORY_VARIABLE
          echo $RENAMED_DEPLOY_ENV
