name: matrix

on:
  pull_request:
    branches:
      - main
      - stage
      - develop
    types:
      - opened
      - synchronize

jobs:
  # basic:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 3
  #   strategy:
  #     matrix:
  #       targets: ["a", "b", "c"]
  #       exclude:
  #         - targets: "c"
  #   steps:
  #     - run: |
  #         echo "${{ matrix.targets }}"
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Install dependencies
  #       uses: ./.github/actions/install-dependencies
  #     - run: |
  #         pnpm --filter @etm7fp/${{ matrix.targets }} run lint

  # exclude1:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 3
  #   strategy:
  #     matrix:
  #       targets: ["a", "b", "c"]
  #       exclude:
  #         - targets: "a"
  #         - targets: "b"
  #         - targets: "c"
  #   steps:
  #     - run: |
  #         echo "${{ matrix.targets }}"

  # exclude2:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 3
  #   strategy:
  #     matrix:
  #       targets: ["a"]
  #       exclude:
  #         - targets: "b"
  #   steps:
  #     - run: |
  #         echo "${{ matrix.targets }}"

  # include:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 3
  #   strategy:
  #     matrix:
  #       include:
  #         - targets: "a"
  #   steps:
  #     - run: |
  #         echo "${{ matrix.targets }}"

  prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'skip ci') }}
    outputs:
      changed: ${{ steps.set-changed.outputs.changed }}
      changes: ${{ steps.filter.outputs.changes }}
      length: ${{ steps.counter.outputs.length }}
    permissions:
      contents: read
      pull-requests: read
    steps:
      # see https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v4

      # see https://github.com/dorny/paths-filter
      - name: Change detection
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            a:
              - 'apps/a/**'
            b:
              - 'apps/b/**'
            c:
              - 'apps/c/**'
            package.json:
              - '**/package.json'
      - name: Print filtered outputs
        run: |
          echo '${{ toJSON(steps.filter.outputs) }}'
      - name: Set length
        id: counter
        run: |
          length=$(echo '${{ steps.filter.outputs.changes }}' | jq 'length')
          echo "length=${length}" >> $GITHUB_OUTPUT
      - name: Set changed
        id: set-changed
        run: |
          changed=$(echo '${{ steps.filter.outputs.changes }}' | jq 'if length > 0 then true else false end')
          echo "changed=${changed}" >> $GITHUB_OUTPUT

  bool:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    needs: prepare
    steps:
      - run: echo '${{ toJSON(needs.prepare.outputs) }}'
      - if: needs.prepare.outputs.changed
        run: echo '${{ needs.prepare.outputs.changed }}'
      - if: ${{ !needs.prepare.outputs.changed }}
        run: echo '${{ needs.prepare.outputs.changed }}'
      - if: needs.prepare.outputs.changed == 'true'
        run: echo '${{ needs.prepare.outputs.changed }}'
      - if: needs.prepare.outputs.changed == 'false'
        run: echo '${{ needs.prepare.outputs.changed }}'

  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: needs.prepare.outputs.changed == 'true'
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        changes: ${{ fromJSON(needs.prepare.outputs.changes) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Run lint
        if: matrix.changes != 'package.json'
        run: |
          pnpm --filter @etm7fp/${{ matrix.changes }} run lint
      - name: Run sort-package-json
        if: matrix.changes != 'package.json'
        run: |
          pnpm exec sort-package-json '**/package.json' '!**/node_modules' --check

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: needs.prepare.outputs.changed == 'true'
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        changes: ${{ fromJSON(needs.prepare.outputs.changes) }}
        # exclude:
        #   - changes: "a"
        #   - changes: "b"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
      - name: Run test
        # run: |
        #   pnpm --filter @etm7fp/${{ matrix.changes }} run test
        run: |
          pnpm --filter @etm7fp/${{ matrix.changes }} run lint

  check:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: ${{ !cancelled() }}
    needs:
      - lint
      - test
    steps:
      - name: Print needs object
        run: |
          echo '${{ toJSON(needs) }}'
      - name: Setting a failure exit code
        if: contains(needs.*.result, 'failure')
        run: |
          exit 1
