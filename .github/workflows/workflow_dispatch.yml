name: Workflow dispatch

on:
  # see https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
  workflow_dispatch:
    inputs:
      app:
        description: Target app
        required: true
        type: choice
        options:
          - a
          - b

jobs:
  prepare:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: contains(fromJSON('["main", "develop"]'), github.ref_name)
    outputs:
      env-name: ${{ steps.set-env-name.outputs.env-name }}
      command: ${{ steps.set-command.outputs.command }}
    steps:
      - name: Print inputs
        run: |
          echo ${{ inputs.app }}
      - name: Print context
        run: |
          echo ${{ github.ref_name }}
      - name: try fromJSON
        id: set-env-name
        env:
          ENV_NAME: |
            ${{ fromJSON('{
              "main": "production",
              "develop": "development"
            }')[github.ref_name] }}
        run: |
          echo "env-name=${{ env.ENV_NAME }}" >> $GITHUB_OUTPUT
      - name: try fromJSON with format
        id: set-command
        env:
          COMMAND: |
            ${{ fromJSON(
              format(
                '{{
                  "main": "{0}",
                  "develop": "{1}"
                }}',
                vars.COMMAND_A,
                vars.COMMAND_B
              )
            )[github.ref_name] }}
        run: |
          echo "command=${{ env.COMMAND }}" >> $GITHUB_OUTPUT

  post:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: prepare
    steps:
      - name: Print outputs
        run: |
          echo ${{ needs.prepare.outputs.env-name }}
          echo ${{ needs.prepare.outputs.command }}
